Problem Link : https://practice.geeksforgeeks.org/problems/4e75764f8f1638eb4f1c5478ca1986043e15e39a/1


Solution : 

```
class Solution {
  public:
    int mostBalloons(int N, pair<int, int> arr[]) {
        if(N < 2) return N;
        int maxPoints = 0;
        int currMax, overlappingPoints, verticalPoints;
        
        map<double, int> slopeMap;
        
        for(int i=0;i<N;i++){
            currMax = overlappingPoints = verticalPoints = 0;
            for(int j=i+1;j<N;j++){
                if(arr[i] == arr[j]){
                    overlappingPoints++;
                }
                else if(arr[i].first == arr[j].first){
                    verticalPoints++;
                }
                else{
                     int yDiff = arr[i].second - arr[j].second;
                     int xDiff = arr[i].first - arr[j].first;
                     
                     double slope = 1.0* (yDiff)/ xDiff;
                     
                     slopeMap[slope]++;
                     currMax = max(currMax, slopeMap[slope]);
                }
                currMax = max(currMax, verticalPoints);
            }
            maxPoints = max(maxPoints , currMax + overlappingPoints + 1);
            slopeMap.clear();
        }
        return maxPoints;
    }
};

```